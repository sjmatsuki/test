#!/usr/bin/env python
# -*- coding: utf-8 -*-
# for NBOSI-CT sensor (seabed 125)

import sys
import lcm
import time
import serial
import seabed_lcm


class Ct(object):
    def __init__(self, port_name):
        self.port = serial.Serial(port_name, 9600, timeout=1.)  # 9600-N-8-1
        self.lcm = lcm.LCM("udpm://?ttl=12")
        self.packet = seabed_lcm.ct_t()
        while True:
            print 'CT: Initialization'
            line = self.port.readline()
            try:
                vals = [float(x) for x in line.split(' ')]
            except:
                vals = 0
            if len(vals) < 4:
                self.port.write("d33\r")  # toggle on the salinity
                time.sleep(0.2)
                self.port.flush()
            else:
                break

    def readloop(self):
        while True:
            line = self.port.readline()
            try:
                vals = [float(x) for x in line.split(' ')]
                self.packet.utime = time.time() * 1e6 # micro sec passed from 1970/1/1
                self.packet.temperature = vals[0]
                self.packet.conductivity = vals[1]
                if len(vals) > 3:
                    self.packet.salinity = vals[2]
                self.lcm.publish("CT", self.packet.encode())
            except:
                print 'CT ERROR (' + line + ')'
        
if __name__ == "__main__":
    if len(sys.argv) != 2:
        print "Usage: %s <serial_port>\n" % sys.argv[0]
        sys.exit(0)
    myct = Ct(sys.argv[1])
    myct.readloop()
