#!/usr/bin/env python
# -*- coding: utf-8 -*-
# for NBOSI-CT sensor (seabed 125)

import sys
import lcm
import time
import serial
import pynmea2
import utm

#from pynmea import nmea
#from pynmea.streamer import NMEAStream

# gpgga.parse(data)
# https://media.readthedocs.org/pdf/pynmea/latest/pynmea.pdf

from exlcm import gps_t

class Ct(object):
    def __init__(self, port_name):
        self.port = serial.Serial(port_name, 4800, timeout=1.)  # 9600-N-8-1
        self.lcm = lcm.LCM()
        self.packet = gps_t()
        while True:
            print 'GPS: Initialization'
            line = self.port.readline()
            try:
		vals = []
                vals = pynmea2.parse(line)
		print(vals)
		line = line.split(",")
		lat = float(line[2])
		long = float(line[4])
		neededData = (float(line[2]), float(line[4]))
		print neededData
            except:
                vals = 0
            if vals < 14:
                time.sleep(0.2)
                self.port.flush()
            else:
                break

    def readloop(self):
        while True:
        	line = self.port.readline()            
		try:
		        vals = []
		        vals = pynmea2.parse(line)
			print(vals)
			line = line.split(",")
			lat = float(line[2])
			long = float(line[4])
			neededData = (time.time()*1e6,float(line[2]), float(line[4]))
			print neededData
				#self.packet.format = vals[0]
				#self.packet.timestamp = vals[1]              
			self.packet.timestamp = (time.time() * 1e6) 
			self.packet.lat_d = float(line[2])
				#self.packet.lat_in = vals[3]
			self.packet.long_d = float(line[4])
				#self.packet.long_in = vals[5]
				#self.packet.q_in = vals[6]
				#self.packet.satelites = vals[7]
				#self.packet.hdop = vals[8]
				#self.packet.ant_alt = vals[9]
				#self.packet.ant_alt_u = vals[10]
				#self.packet.geo_sep = vals[11]
				#self.packet.geo_sep_u = vals[12]
				#self.packet.age = vals[13] 
				#self.packet.dif_ref = vals[14]			
			
			utm = utm.from_latlon(float(line[2]),float(line[4]))
			print utm
			#self.packet.utm_lat = utm[0]
			#self.packet.utm_long = utm[2]
			#lala = (float(utm[0]), float(utm[2]))
			#print "xxxxxx"
			print lala
			self.lcm.publish("GPS", self.packet.encode())
	    	except:
        		print 'E'
        
if __name__ == "__main__":	
    if len(sys.argv) != 2:
        print "Usage: %s <serial_port>\n" % sys.argv[0]
        sys.exit(0)
    myct = Ct(sys.argv[1])
    myct.readloop()
